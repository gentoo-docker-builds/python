name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: python

jobs:

#ACCEPT_KEYWORDS="~amd64" emerge -s dev-lang/python | grep "Latest version available" | head -1 | awk '{print $4}'

  check_version:
    runs-on: ubuntu-latest
    container: ghcr.io/gentoo-docker-builds/gendev:latest
    outputs:
      version: ${{ steps.version.outputs.LATEST }}
    steps:

      - name: fetch latest available python version in portage
        run: |
          version=$(ACCEPT_KEYWORDS="~amd64" emerge -s dev-lang/python | grep "Latest version available" | head -1 | awk '{print $4}')
          echo "::set-env name=LATEST::$version"
          echo "::set-output name=LATEST::$version"
        id: version

      - name: latest python version
        run: echo 'Latest available python version in portage is' $LATEST

  build_and_push:
    needs: [check_version]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: version check
        run: echo ${{needs.check_version.outputs.version}}

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from portage run
          VERSION=${{needs.check_version.outputs.version}}

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
